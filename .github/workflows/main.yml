name: Build OJS plugin tar.gz

on:
  workflow_dispatch:
    inputs:
      plugin_name:
        description: 'Plugin folder/name (used for tar.gz filename and top-level folder)'
        required: false
        default: 'TrustScoreUIPlugin'

permissions:
  contents: read

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    env:
      UI_DIR: trustScoreUI
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: trustScoreUI/package-lock.json

      - name: Install & build trustScoreUI (Vite)
        working-directory: ${{ env.UI_DIR }}
        run: |
          npm ci
          npm run build

      - name: Prepare artefacts folder
        run: |
          PLUGIN="${{ inputs.plugin_name || 'TrustScoreUIPlugin' }}"
          echo "Using plugin name: $PLUGIN"
          rm -rf artefacts
          mkdir -p "artefacts/$PLUGIN"

          # copy entire dist folder
          if [ -d "${{ env.UI_DIR }}/dist" ]; then
            cp -r "${{ env.UI_DIR }}/dist" "artefacts/$PLUGIN/"
          else
            echo "ERROR: ${ env.UI_DIR }/dist not found. Build may have failed."
            exit 1
          fi

          # copy php wrapper
          if [ -f "${{ env.UI_DIR }}/TrustScoreUIPlugin.php" ]; then
            cp "${{ env.UI_DIR }}/TrustScoreUIPlugin.php" "artefacts/$PLUGIN/"
          else
            echo "ERROR: ${ env.UI_DIR }/TrustScoreUIPlugin.php not found."
            exit 1
          fi

          # copy version.xml
          if [ -f "${{ env.UI_DIR }}/version.xml" ]; then
            cp "${{ env.UI_DIR }}/version.xml" "artefacts/$PLUGIN/"
          else
            echo "ERROR: ${ env.UI_DIR }/version.xml not found."
            exit 1
          fi

      - name: Create plugin tar.gz archive
        run: |
          PLUGIN="${{ inputs.plugin_name || 'TrustScoreUIPlugin' }}"
          ARCHIVE_NAME="${PLUGIN}.tar.gz"
          tar -czvf "$ARCHIVE_NAME" -C artefacts "$PLUGIN"
          ls -lh "$ARCHIVE_NAME"
          echo "Created $ARCHIVE_NAME"

      - name: Upload tar.gz as workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.plugin_name || 'TrustScoreUIPlugin' }}-tar
          path: ./${{ inputs.plugin_name || 'TrustScoreUIPlugin' }}.tar.gz
          retention-days: 7
