name: Build OJS plugin tar.gz

on:
  workflow_dispatch:
    inputs:
      plugin_name:
        description: 'Plugin folder/name (used for tar.gz filename and top-level folder)'
        required: false
        default: 'TrustScoreUIPlugin'
      release_tag:
        description: 'Git tag for the release'
        required: true

permissions:
  contents: write  # needed to create release and upload asset

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    env:
      UI_DIR: trustScoreUI
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: trustScoreUI/package-lock.json

      - name: Install & build trustScoreUI (Vite)
        working-directory: ${{ env.UI_DIR }}
        run: |
          npm ci
          npm run build

      - name: Prepare artefacts folder
        run: |
          echo "Preparing artefacts folder"
          rm -rf artefacts
          mkdir -p artefacts

          # copy built dist folder directly into artefacts/
          cp -r "${{ env.UI_DIR }}/dist" artefacts/
          cp "${{ env.UI_DIR }}/TrustScoreUIPlugin.php" artefacts/
          cp "${{ env.UI_DIR }}/version.xml" artefacts/

      - name: Create plugin tar.gz archive
        run: |
          ARCHIVE_NAME="${{ inputs.plugin_name || 'TrustScoreUIPlugin' }}.tar.gz"
          tar -czvf "$ARCHIVE_NAME" artefacts/
          ls -lh "$ARCHIVE_NAME"
          echo "Created $ARCHIVE_NAME"

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ inputs.release_tag }}
          name: ${{ inputs.release_tag }}
          body: "Automated release of ${{ inputs.plugin_name || 'TrustScoreUIPlugin' }}."
          draft: false
          prerelease: false

      - name: Upload tar.gz to release
        uses: softprops/action-gh-release@v1
        with:
          files: ./${{ inputs.plugin_name || 'TrustScoreUIPlugin' }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
